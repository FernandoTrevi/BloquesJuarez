@using BloquesJuarez.Datos;
@model Paginacion<BloquesJuarez.Models.Remito>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container p-2">
    <div class="row p-2">
        <div class="col-6">
            <h2 class="text-info">Lista de Remitos</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="Remito" asp-action="Crear" class="btn btn-primary" data-toggle="tooltip" title="Generar un nuevo Remito">
                <i class="bi bi-plus-circle-fill"></i>  Nuevo Remito
            </a>
            <a asp-controller="Remito" asp-action="ClientesConPendientes" class="btn btn-info" data-toggle="tooltip" title="Ver lista de clientes con remitos pendientes">
                <<i class="bi bi-person-lines-fill"></i>  Clientes con pendientes
            </a>
        </div>
    </div>

    <form asp-controller="Remito" asp-action="Index">
        <p>
            Buscar: <input type="text" name="buscar" class="form-text" />
            <input type="submit" value="Buscar" class="btn btn-sm btn-dark" />
        </p>
    </form>
    <button onclick="goBack()" class="btn btn-primary">Volver</button>

    <hr />
    <br />

    @if (Model.Count() > 0)
    {
        <div class="row mt-3">
            <div class="col-md-2"></div> <!-- Div vacío izquierdo -->
            <div class="col-md-8">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover">
                        <thead>
                            <tr class="table-dark text-center">
                                <th>Fecha</th>
                                <th>Nro Remito</th>
                                <th>Cliente</th>
                                <th>Estado</th>
                                <th style="width: 80px;">Acciones</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Fecha.ToShortDateString()</td>
                                    <td>@item.NroRemito</td>
                                    <td>@item.Cliente.NombreCliente</td>
                                    <td>
                                        <span class="badge @GetBadgeClass(item.Estado)">@item.Estado.ToString()</span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-controller="Remito" asp-action="Ver" asp-route-Id="@item.Id" class="btn btn-primary mx-2" data-toggle="tooltip" title="Ver detalles del remito">
                                                <i class="bi bi-eye"></i>
                                            </a>

                                            <a asp-controller="Remito" asp-action="Eliminar" asp-route-Id="@item.Id" class="btn btn-danger mx-2" data-toggle="tooltip" title="Elimiar el remito">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-md-2"></div> <!-- Div vacío derecho -->
        </div>

        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.PaginasAnteriores)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { numpag = Model.PaginaInicio - 1, filtroActual = ViewData["FiltroActual"] })">Anterior</a>
                    </li>
                }

                @for (int i = 1; i <= Model.PaginasTotales; i++)
                {
                    <li class="page-item @(i == Model.PaginaInicio ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { numpag = i, filtroActual = ViewData["FiltroActual"] })">@i</a>
                    </li>
                }

                @if (Model.PaginasPosteriores)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { numpag = Model.PaginaInicio + 1, filtroActual = ViewData["FiltroActual"] })">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
    }
    else
    {
        <p>No hay registros de Remitos</p>
    }
</div>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
@functions {
    public string GetBadgeClass(EstadoRemito estado)
    {
        return estado == EstadoRemito.Pendiente ? "bg-danger" : "bg-success";
    }
}
<style>
    /* Estilos para los badges de estado */
    .bg-danger {
        background-color: red;
        color: white;
    }

    .bg-success {
        background-color: green;
        color: white;
    }

</style>